name: Docker-Based Testing

on:
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SEGMENT_DOWNLOAD_TIMEOUT_MINS: "1"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version-file: .java-version
          cache: "gradle"

      - uses: docker/setup-compose-action@v1
        with:
          version: latest

      - name: Set up .env (dev profile)
        run: cp .env.example .env

      - name: Start Docker Compose (dev profile)
        run: docker compose --profile dev up -d

      - name: Run Gradle tests
        id: gradle-test
        run: |
          export $(grep -v '^#' .env | xargs)
          TEST_START=$(date +%s)
          ./gradlew test --no-daemon
          TEST_END=$(date +%s)
          TEST_DURATION=$((TEST_END - TEST_START))
          echo "test_duration=${TEST_DURATION}" >> $GITHUB_OUTPUT

      - name: Docker clean-up
        run: docker compose down

      - name: Upload Test Report on Failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests/test

      - name: Show Test/Workflow Duration Ratio on Success
        if: success()
        run: |
          WORKFLOW_START=$(date -u -d "${{ github.event.pull_request.created_at }}" +%s)
          WORKFLOW_END=$(date -u +%s)
          WORKFLOW_DURATION=$((WORKFLOW_END - WORKFLOW_START))
          TEST_DURATION=${{ steps.gradle-test.outputs.test_duration }}
          RATIO=$(awk "BEGIN {printf \"%.2f\", $TEST_DURATION/$WORKFLOW_DURATION}")
          echo "${TEST_DURATION} / ${WORKFLOW_DURATION} seconds ($RATIO)"
